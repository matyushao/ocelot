
"""
Тут будет практические задания по теме: Функции, Циклы и Управляющие конструкции
"""
from re import split

name = "Анна"
a = 5
b = 7

"""
Напишите программу, которая:
1. Реализует функцию `greet_user(name)`, принимающую имя пользователя и выводящую приветствие:`"Привет, [имя]!
Добро пожаловать в мир Python!"`.
"""


def greet_user(name):
    print(f"Привет, {name}! Добро пожаловать в мир Python!")
# greet_user(name)

"""
Напишите программу, которая:
2. Реализует функцию `calculate_sum(a, b)`, которая принимает два числа и возвращает их сумму.
"""


def calculate_sum(a, b):
    print(a + b)
# calculate_sum(a, b)

"""
Напишите программу, которая:
3. Использует обе функции для взаимодействия с пользователем.
"""


def functions_intro(name, a, b):
    print(f"Знакомься, это наш новый сотрудник {name}, она работает разработчиком уже {a + b} лет!")
# functions_intro(name, a, b)


"""
 Условия и ветвления: Научиться использовать условия и ветвления для реализации логики.
"""

year_of_birth = 1990
year_old = 34

"""
Напишите программу, которая:
1. Спрашивает у пользователя год его рождения.
"""


def your_year_of_birth(year_of_birth):
    print(f"Введите год вашего рождения: {year_of_birth}")
# your_year_of_birth(year_of_birth)


"""
Напишите программу, которая:
2. Рассчитывает возраст пользователя.
"""


def your_year_old(year_old):
    print(f"Ваш возраст: {year_old}")
# your_year_old(year_old)

"""
Напишите программу, которая:
3. В зависимости от возраста выводит:
    - Если меньше 18: `"Вы еще молоды, учеба — ваш путь!"`.
    - Если 18–65: `"Отличный возраст для карьерного роста!"`.
    - Если больше 65: `"Пора наслаждаться заслуженным отдыхом!"`..
"""


def age_message(age):
    if age < 18:
        print("Вы еще молоды, учеба - ваш путь!")
    elif 18 <= age <= 65:
        print("Отличный возраст для карьерного роста")
    else:
        print("Пора наслаждаться заслуженным отдыхом!")

# age_message(year_old)


"""
 Циклы: Закрепить навыки работы с циклами for и while.
"""

number = 5
total = 0

"""
Напишите программу, которая:
1. Запрашивает у пользователя число n.
"""

# print(number)

"""
Напишите программу, которая:
2. Выводит все числа от 1 до n в одной строке, разделяя их пробелами.
"""

# for number in range(1, number + 1):
    # print(number, end=' ')

"""
Напишите программу, которая:
3. Выводит сумму всех чисел от 1 до n.
"""

#for i in range(1, number + 1):
#     total += i
#print(total)

"""
 Расширенные функции: Научиться создавать функции с несколькими параметрами и возвращать результаты.
"""

"""
Напишите программу, которая:

1. Реализует функцию `check_triangle(a, b, c)`, которая принимает три числа (длины сторон треугольника) и проверяет, можно ли из них построить треугольник.
    - Условие существования треугольника: каждая сторона должна быть меньше суммы двух других.
2. Если треугольник можно построить, программа должна определить его тип:
    - Равносторонний, равнобедренный или разносторонний.
"""

# def check_triangle(a, b, c):
#     if a + b > c and a + c > b and b + c > a:
#         if a == b == c:
#             return "Треугольник равносторонний"
#         elif a == b or b == c or a == c:
#             return "Треугольник равнобедренный"
#         else:
#             return "Треугольник разносторонний"
#     else:
#         return "Такого треугольника не существует"
#
# a = 2
# b = 3
# c = 3
#
# result = check_triangle(a, b, c)
# print(result)

"""
 Работа с вложенными функциями: Освоить концепцию вложенных функций для структурирования кода.
"""

"""
Напишите программу, которая:

1. Реализует основную функцию `calculator()`, которая:
    - Спрашивает у пользователя два числа.
    - Спрашивает операцию (`+`, , , `/`).
    - Использует вложенные функции для выполнения каждой операции.
2. Возвращает результат выбранной операции.
"""

